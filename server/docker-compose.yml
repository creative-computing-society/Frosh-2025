version: "3.4"

services:
  api:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "4890:8080"
    volumes:
      - ./server.log:/server.log           # Map server.log to the host
      - ./Error.log:/Error.log             # Map Error.log to the host
    restart: always
    depends_on:
      redis:
        condition: service_healthy         # Wait for Redis health check
    networks:
      - app-network
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
    command: redis-server --appendonly yes --bind 0.0.0.0
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge